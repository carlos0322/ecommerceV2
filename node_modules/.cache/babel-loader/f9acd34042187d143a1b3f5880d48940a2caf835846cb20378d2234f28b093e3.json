{"ast":null,"code":"var _jsxFileName = \"/Users/carloslopez/Desktop/eCommerceV2/ecommerce/src/pages/Products.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  const [productInfo, setProductInfo] = useState([]);\n\n  // useEffect(() => {\n  //   // Axios.get(\"http://localhost:3001/products\").then((response) => {\n  //     // setProductInfo(response.data);\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    const fetchproduct = async () => {\n      try {\n        const res = await axios.get('http://localhost:3001/Products');\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchproduct();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 4\n  }, this);\n}\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const MyComponent = () => {\n//   const [data, setData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch data from the API using Axios\n//     axios.get('http://localhost:3001/Products')\n//       .then(response => {\n//         setData(response.data);\n//       })\n//       .catch(error => {\n//         console.error(error);\n//       });\n//   }, []); // The empty array tells useEffect to only run on mount\n\n//   return (\n//     <div>\n//       {data ? (\n//         <div>{data.name}</div>\n//       ) : (\n//         <div></div>\n//       )}\n//     </div>\n//   );\n// };\n_s(Products, \"e/BFJlO76gkn/8WTKD4SufIAgV8=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useEffect","useState","axios","Products","productInfo","setProductInfo","fetchproduct","res","get","console","log","error"],"sources":["/Users/carloslopez/Desktop/eCommerceV2/ecommerce/src/pages/Products.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\n\nfunction Products() {\n  const [productInfo, setProductInfo] = useState([]);\n\n  // useEffect(() => {\n  //   // Axios.get(\"http://localhost:3001/products\").then((response) => {\n  //     // setProductInfo(response.data);\n  //   });\n  // }, []);\n\n  useEffect(()=>{\n    const fetchproduct = async () =>{\n    try {\n      const res = await axios.get('http://localhost:3001/Products')\n      console.log(res)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n    fetchproduct()\n  }, [])\n\n  return (\n   <div></div>\n  );\n}\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const MyComponent = () => {\n//   const [data, setData] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch data from the API using Axios\n//     axios.get('http://localhost:3001/Products')\n//       .then(response => {\n//         setData(response.data);\n//       })\n//       .catch(error => {\n//         console.error(error);\n//       });\n//   }, []); // The empty array tells useEffect to only run on mount\n\n//   return (\n//     <div>\n//       {data ? (\n//         <div>{data.name}</div>\n//       ) : (\n//         <div></div>\n//       )}\n//     </div>\n//   );\n// };\nexport default Products;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAI1B,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAI;IACZ,MAAMM,YAAY,GAAG,YAAW;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,gCAAgC,CAAC;QAC7DC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAClB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF,CAAC;IACCL,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACC;IAAA;IAAA;IAAA;EAAA,QAAW;AAEd;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GApDSH,QAAQ;AAAA,KAARA,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}